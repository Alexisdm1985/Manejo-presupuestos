@using manejo_presupuestos.Models.Cuenta;
@model IEnumerable<IndexCuentasViewModel>

@{
    ViewData["Title"] = "Cuentas";

    string FormatearBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    //Obtiene si es activo o pasivo
    string ObtenerClaseTipoCuenta(decimal balance)
    {
        return balance > 0 ? "activo" : "pasivo";
    }
}

<h1 class="mb-3">Cuentas</h1>

<a asp-controller="Cuentas" asp-action="Crear" class="btn btn-dark mb-3">Crear cuenta</a>

<div class="contenedor-totales mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
            <p>@FormatearBalance(Model.Where(cuenta => cuenta.Balance > 0).Sum(x => x.Balance))</p>
        </div>
    </div>

    <div>
        <div>
            <strong>Pasivos</strong>
        </div>
        <div class="pasivo">
            <p>@FormatearBalance(Model.Where(cuenta => cuenta.Balance < 0).Sum(x => x.Balance))</p>
        </div>
    </div>

    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            <p>@FormatearBalance(@Model.Sum(x => x.Balance))</p>
        </div>
    </div>
</div>

<div class="accordion acordeon-cuentas">

    @foreach (var tipoCuenta in Model)
    {
        // Por cada tipo de cuenta se creara un acordion con sus balances segun tipo de cuenta
        <div class="accordion-item">
            <h2 class="accordion-header" id="cabeceraUno">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", ""); // El accordion debe tener un id para cada item
                    var dataBSTarget = "#" + id; // Necesario para accordion : https://getbootstrap.com/docs/5.0/components/accordion/
                    var claseTipoCuenta = ObtenerClaseTipoCuenta(tipoCuenta.Balance); // Para modificar css si es activo o pasivo
                }

                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBSTarget" aria-expanded="true" aria-controls="cabeceraUno">

                    <span><strong>@tipoCuenta.TipoCuenta </strong></span>
                    <span class="@claseTipoCuenta">@FormatearBalance(tipoCuenta.Balance)</span>
                </button>
            </h2>

            <div id="@id" class="accordion-collapse collapse">
                <div>
                    <ul class="list-group">
                        @foreach (var cuenta in tipoCuenta.Cuentas)
                        {
                            // Lista de balance segun las cuentas del tipo de cuenta procesado.
                            var claseCuenta = ObtenerClaseTipoCuenta(cuenta.Balance);

                            <li class="list-group-item">

                                <span>
                                    <strong><a asp-action="Detalle" asp-controller="Cuentas" asp-route-id="@cuenta.Id">@cuenta.Nombre</a></strong>
                                    <a class="btn btn-primary" asp-controller="Cuentas" asp-action="Editar" asp-route-idCuenta ="@cuenta.Id">
                                        Editar
                                    </a>
                                    <a class="btn btn-danger" asp-controller="Cuentas" asp-action="Eliminar" asp-route-idCuenta ="@cuenta.Id">
                                        Eliminar
                                    </a>
                                </span>

                                <span class="@claseCuenta">
                                    @FormatearBalance(cuenta.Balance)
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>